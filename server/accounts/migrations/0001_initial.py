<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
# Generated by Django 4.1.1 on 2022-09-16 02:10
=======
# Generated by Django 4.1.1 on 2022-09-16 02:17
>>>>>>> 86fecf2 (Fix game api ver_0.5)
=======
# Generated by Django 4.1 on 2022-09-19 04:41
>>>>>>> f807105 (fix: makemigrations 다시)
=======
# Generated by Django 4.1.1 on 2022-09-16 05:21
>>>>>>> 91db506 (feat : 회원정보수정)
=======
# Generated by Django 4.1.1 on 2022-09-19 04:16
>>>>>>> 5784305 (Add ToonBTI views.py/question definition)

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

<<<<<<< HEAD
<<<<<<< HEAD
    dependencies = [
<<<<<<< HEAD
=======
        ("webtoons", "__first__"),
>>>>>>> 91db506 (feat : 회원정보수정)
    ]
=======
    dependencies = []
>>>>>>> 86fecf2 (Fix game api ver_0.5)

    operations = [
        migrations.CreateModel(
            name="Member",
            fields=[
<<<<<<< HEAD
<<<<<<< HEAD
=======
    dependencies = [
        ('webtoons', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
>>>>>>> 5784305 (Add ToonBTI views.py/question definition)
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('member_id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(default='', max_length=255, unique=True)),
                ('nickname', models.CharField(default='', max_length=100, unique=True)),
                ('gender', models.CharField(default='', max_length=100)),
                ('birth', models.IntegerField(default=0)),
                ('profile_image_url', models.TextField(blank=True)),
                ('count', models.IntegerField(default=0)),
<<<<<<< HEAD
                ('liked_thumnail', models.CharField(max_length=100)),
=======
                ('liked_thumbnail', models.CharField(max_length=100)),
>>>>>>> 5784305 (Add ToonBTI views.py/question definition)
                ('resigned_time', models.DateTimeField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
<<<<<<< HEAD
            ],
            options={
                'abstract': False,
=======
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                ("member_id", models.AutoField(primary_key=True, serialize=False)),
                ("email", models.EmailField(default="", max_length=255, unique=True)),
                ("nickname", models.CharField(default="", max_length=100, unique=True)),
                ("gender", models.CharField(default="", max_length=100)),
                ("birth", models.IntegerField(default=0)),
                ("profile_image_url", models.TextField(blank=True)),
                ("count", models.IntegerField(default=0)),
                ("liked_thumnail", models.CharField(max_length=100)),
                ("resigned_time", models.DateTimeField(blank=True, null=True)),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_admin", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
>>>>>>> 86fecf2 (Fix game api ver_0.5)
=======
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                ("member_id", models.AutoField(primary_key=True, serialize=False)),
                ("email", models.EmailField(default="", max_length=255, unique=True)),
                ("nickname", models.CharField(default="", max_length=100, unique=True)),
                ("gender", models.CharField(default="", max_length=100)),
                ("birth", models.IntegerField(default=0)),
                ("profile_image_url", models.TextField(blank=True)),
                ("count", models.IntegerField(default=0)),
                ("liked_thumnail", models.CharField(max_length=100)),
                ("resigned_time", models.DateTimeField(blank=True, null=True)),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_admin", models.BooleanField(default=False)),
                (
                    "liked_webtoons",
                    models.ManyToManyField(
                        related_name="liked_webtoon_users", to="webtoons.webtoon"
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(related_name="tag_users", to="webtoons.tag"),
                ),
                (
                    "view_webtoons",
                    models.ManyToManyField(
                        related_name="view_webtoon_users", to="webtoons.webtoon"
                    ),
                ),
            ],
            options={
                "abstract": False,
>>>>>>> 91db506 (feat : 회원정보수정)
=======
                ('liked_webtoons', models.ManyToManyField(related_name='liked_webtoon_users', to='webtoons.webtoon')),
                ('tags', models.ManyToManyField(related_name='tag_users', to='webtoons.tag')),
                ('view_webtoons', models.ManyToManyField(related_name='view_webtoon_users', to='webtoons.webtoon')),
            ],
            options={
                'abstract': False,
>>>>>>> 5784305 (Add ToonBTI views.py/question definition)
            },
        ),
    ]
